
# Shortcuts
alias i="ipython"
alias s="source $HOME/.bash/shell"
alias preview="open -a Preview"
alias pb="curl -F 'f:1=<-'"
alias ag="ag --pager=less"
alias hex="open -a 'Hex Fiend'"

function de-santa {
    sudo /sbin/kextunload -b com.google.santa-driver
    sudo launchctl unload /Library/LaunchDaemons/com.google.santad.plist
}

function rng() {
    openssl rand -base64 "${1:-24}" | tr 'A-Z' 'a-z' | tr -d '+-='
}

function pem2ascii() {
    openssl x509 -outform der | der2ascii
}

function ascii2pem() {
    ascii2der | openssl x509 -inform der
}

function cs() {
    csearch -n "$@" | cut -c44- | rg "$@"
}

alias rot13="tr 'a-zA-Z' 'n-za-mN-ZA-M'"

function translate() {
    query="$(cat xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')"
    curl -s "https://translate.googleapis.com/translate_a/single?client=gtx&sl=$1&tl=$2&dt=t&q=$query" | jq -r '.[0][]|.[0]'
}

function spanish() {
    translate en es
}

function de-spanish() {
    translate es en
}

alias stephen="spanish | rot13 | base64"
alias de-stephen="base64 -D | rot13 | tee -a /dev/stderr | de-spanish"

function minecraft() {
    java -jar '/Users/amlweems/Library/Application Support/minecraft/launcher.jar'
}

function jwt() {
    pbpaste | step crypto jwt inspect -insecure | jq .
}

function personal-git() {
    CORRECT_NAME="Anthony Weems"
    CORRECT_EMAIL="amlweems@gmail.com"

    export GIT_COMMITTER_NAME="$CORRECT_NAME"
    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
    export GIT_AUTHOR_NAME="$CORRECT_NAME"
    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
}

function context() {
    kubectl config use-context "$1" && echo "$1" > ~/.kube-ctx
}

function docker-pwd() {
    docker run --rm -it -v "$(pwd):/host" -w /host "$@"
}

function docker-go() {
    docker run --rm -it -v ~/go:/go -e GOPATH=/go -v "$(pwd):/host" -w /host --entrypoint go golang:alpine $@
}

function docker-net-go() {
    docker run --rm -it -v ~/go:/go -e GOPATH=/go -v "$(pwd):/host" -w /host -p 8000:8000 --entrypoint go golang:alpine $@
}

function semgrep() {
    docker run --rm -it --net=none -v "$(pwd):/src" returntocorp/semgrep:latest $@
}

function nsp() {
    packages=$(find . -name package.json)
    count=$(echo "$packages" | wc -l | awk '{print $1}')
    if [ "$count" -gt "20" ]; then
        read -p "$count package.json files. Are you sure? [y/n] " -n 1 -r && echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            return 1
        fi
    fi
    for package in $packages; do
        echo "$package"
        (cd "$(dirname "$package")"
         if [ ! -f package-lock.json ]; then
           docker run --rm -it -v "$(pwd):/src" -w /src node npm i --package-lock-only
         fi
         docker run --rm -it -v "$(pwd):/src:ro" -w /src node npm audit --only=prod
        )
    done
}

function parsifal() {
    heads=${@:1:$(($# - 1))}
    tail=${@:$#}
    if [[ -z "$heads" || ! $tail == *"/"* ]]; then
        docker run --rm parsifal $tail
    else
        dir=$(dirname "$tail")
        base=$(basename "$tail")
        docker run --rm -v "$dir:/opt" --workdir /opt parsifal $heads $base
    fi
}

function caradoc() {
    heads=${@:1:$(($# - 1))}
    tail=${@:$#}
    if [[ -z "$heads" || ! $tail == *"/"* ]]; then
        docker run --rm caradoc $tail
    else
        dir=$(dirname "$tail")
        base=$(basename "$tail")
        docker run --rm -it -v "$dir:/opt" --workdir /opt caradoc $heads $base
    fi
}

function img() {
    docker run --rm -it                             \
        --name img                                  \
        --volume "$(pwd):/home/user/src:ro"         \
        --workdir /home/user/src                    \
        --volume "${HOME}/.docker:/root/.docker:ro" \
        --cap-add SETGID                            \
        --cap-add SETUID                            \
        --security-opt apparmor=unconfined          \
        --security-opt seccomp=unconfined           \
        r.j3ss.co/img:latest $@
}

function et() {
    docker run --rm -v ~/research/et:/root/host-share --privileged -it --workdir=/root ctfhacker/epictreasure
}

function proselint() {
    docker run --net=none --rm -v "$(pwd):/workdir:ro" proselint "$@" | \
      grep -v typography.symbols.curly_quotes | \
      grep -v typography.symbols.ellipsis
}

function hunspell() {
    docker run --net=none --rm -it -v "$(pwd):/workdir:ro" hunspell "$@"
}

function prae() {
    export __prompt_color="$FG_RED"
    export PS1="\${__prompt_color}-[ \\t ] engineer@workstation \e[m\\n\\$ ";
}

function f() {
    find . -iname "$@"
}
function sf() {
    subl $(find . -iname "$@")
}
function vf() {
    vim $(find . -iname "$@")
}

function fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# Utilities
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias dns="ipconfig getoption en0 domain_name_server"
